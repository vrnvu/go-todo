name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

concurrency:
    group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
    cancel-in-progress: true

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: 1.22

            - name: Download modules
              run: go mod download

            - name: go-test
              shell: bash
              run: make test

            - name: go-coverage
              shell: bash
              run: |-
                OUTPUT="$(make test-coverage)"
                TOTAL="$(echo $OUTPUT | awk 'END{print $NF}')"
                echo "::group::Coverage (${TOTAL})"
                echo "${OUTPUT}"
                echo "::endgroup::"

    lint:
        name: lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - uses: reviewdog/action-setup@v1

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: 1.22

            - name: Download modules
              run: go mod download
            
            - name: diff-check
              shell: bash
              run: |-
                set -eEu
                set +o pipefail
                make diff-check

            - name: go-lint
              shell: bash
              run: make lint

            - name: zapw-logger
              shell: bash
              env:
                REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
              run: |-
                set -eEu
                set +o pipefail
                make zapcheck 2>&1 | \
                reviewdog -efm="%f:%l:%c: %m" \
                  -name="zap-logger" \
                  -reporter="github-pr-check" \
                  -filter-mode="diff_context" \
                  -fail-on-error="true" \
                  -level="error"
    
    integration-test:
        name: integration-test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: 1.22

            - name: Download modules
              run: go mod download

            - name: Start Go server
              run: go run cmd/todos/main.go &
              env:
                PORT: 8080

            - name: Wait for server to start
              run: |
                until curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health | grep -q "200"; do
                  echo "Waiting for server..."
                  sleep 1
                done

            - name: Run integration tests
              run: ./scripts/integration-test.sh

            - name: Stop Go server
              run: kill $(lsof -t -i:8080)
